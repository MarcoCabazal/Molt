//
//  {{ module_name }}WireFrame.swift
{% include 'header' %}
import UIKit

final class {{ module_name }}WireFrame {

  static func prepareModule() -> UIViewController {
    let navController = UINavigationController.instantiate(from: .main, identifier: "mainNavigationController")

    guard let view = navController.childViewControllers.first as? {{ module_name }}View else {
      return UIViewController()
    }

    let presenter: {{ module_name }}PresenterProtocol & {{ module_name }}InteractorOutputProtocol = {{ module_name }}Presenter()
    let interactor: {{ module_name }}InteractorProtocol = {{ module_name }}Interactor()
    let wireFrame: {{ module_name }}WireFrameProtocol = {{ module_name }}WireFrame()
    let localDataManager: {{ module_name }}LocalDataManagerProtocol = {{ module_name }}LocalDataManager()
    let remoteDataManager: {{ module_name }}RemoteDataManagerProtocol = {{ module_name }}RemoteDataManager()

    // INTEGRATION
    view.presenter = presenter
    presenter.view = view
    presenter.wireFrame = wireFrame
    presenter.interactor = interactor
    interactor.presenter = presenter
    interactor.localDataManager = localDataManager
    interactor.remoteDataManager = remoteDataManager

    return navController
  }
}

// MARK: NAVIGATION
extension {{ module_name }}WireFrame: {{ module_name }}WireFrameProtocol {

  func navigate(to object: {{ model }}, from view: {{ module_name }}ViewProtocol) {
    guard let sourceView = view as? UIViewController else { return }

    let detailVC = {{ module_name }}DetailWireFrame.prepareModule(with: object)
    sourceView.navigationController?.pushViewController(detailVC, animated: true)
  }
}
