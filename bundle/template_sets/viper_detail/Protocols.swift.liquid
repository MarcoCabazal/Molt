{% if target != "xcode" %}{% assign filename_suffix = "Protocols.swift" %}{% include 'header' %}{% else %}//___FILEHEADER___{% endif %}

import UIKit

// MARK: Called by VIEW -> Implemented BY PRESENTER
protocol {{ module_name }}PresenterProtocol: class {
  weak var view: {{ module_name }}ViewProtocol? { get set }
  weak var wireframe: {{ module_name }}WireframeProtocol? { get set }
  var dataSource: {{ model }}? { get set }

  func viewDidLoad()
}

// MARK: PRESENTER -> VIEW
protocol {{ module_name }}ViewProtocol: Loadable {
  func render(content: {{ model }}?)
}

// MARK: PRESENTER -> WIREFRAME
protocol {{ module_name }}WireframeProtocol: class {
  static func prepareModule(with object: {{ model }}) -> UIViewController
}
